- introduce empty views
- UTF8 fixes with iconv?
- move /<view> to /tags/<name|sel>/
- add /tags/sel/index (for column reverse-addressing)
- an SDL window requests that it should not be allowed to be 
	resized, wmii still allows the user to resize it!
	(a good idea would be to make all windows that set that hint floating windows)
- re-introduce mouse based resizals (titlebar and border)
- idea for column mode:
	100: is the current default mode with fallback (shows arbitrary clients)
	0: is the current max mode, shows only one client at the time (same bahvior
			as current) n: shows n clients, in stacking mode, using the
	selected client as center,
		n == 1 is current stacking mode,
		n == equal will use the center of (n/2),
		n == unequal has always a center element.
	Visible clients should only change when a formerly hidden
	(stacked) client is made visible.  So, when the fifth client is focused
	and made visible, the third would disappear (with n=2) -- this means on
	boundaries, like in mutt(1).
- make /foo/ -> bar+! -alike rules working
- /def/ncol defines num of columns which should be created by default if possible.
- wmiimenu -t <title> flag (add an additional line if -t is supplied)
- remove the geom syntax as it is now (with the +- stuff, and only
	allowing explicit coordinates, instead additionally resize
	+/-<w> +/-<h> and move +/-<x> +/-<y> actions are needed in the
	associated ctl devices of clients.  
- add wmiir ls (read should have same semantic as in 9p), output without
	details, add -l for details like in ls of Plan 9
- remove internal labels, now tagging seems easy and straightforward that they
	THINK: We'll need CreateTag, DestroyTag, UnfocusTag, FocusTag and the
	event loop in wmiirc must be before TAGGING can be externalized again
- liblitz: window abstraction (creation, events), can be reused in menu and bar
	and frames
- tagbars and grab-boxes (like in acme)
- screen dimension rescaling if screen resolution changes (even with Xrandr)
- Xinerama support
- partial EWMH support
- libixp: idea from PoP: implement a va_args method similiar to printf for
	marshalling 9P messages, might reduce LOC drastically


23:55 <@garbeam> I currently think of something different I haven't done so far, but
which might make some sense
23:55 <@garbeam> I think of reporting an error if a specific command cannot be
performed
23:55 <@garbeam> (a write error with wmiir write)
23:56 <@garbeam> e.g. if you do move next, and there is no next column, an error
could be reported, thus one could add newcol next/prev instead
23:56 <@garbeam> s/add/perform/
23:57 <@garbeam> thiswould allow keeping the current behavior, but allowing your
behavior as well, without screwing up things as they are
23:57 <@garbeam> a column move command is a different question
23:58 < John-Galt> that sounds reasonable
Day changed to 20 May 2006
00:00 <@garbeam> ie, if `xwrite /view/sel/sel/ctl move next` then xwrite
/view/sel/sel/ctl newcol next; fi
00:02 <@garbeam> I think moving columns is not necessary at all, it won't be used
that often
00:02 <@garbeam> John-Galt: what resolution do you got that you consider column
