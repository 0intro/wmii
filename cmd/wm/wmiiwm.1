.TH WMIIWM 1 wmii-3
.SH NAME
wmiiwm \- window manager improved 2 (core)
.SH SYNOPSIS
.B wmiiwm
.RB \-a
.IR <address>
.RB [ \-c ]
.RB [ \-v ]
.SH DESCRIPTION
.SS Overview
.BR wmiiwm (1)
is the core of the window manager improved 2.
.P
.BR wmii
is a dynamic window manager for X11. In contrast to static window management
the user rarely has to think about how to organize windows, no matter what he
is doing or how many applications are used at the same time. The window manager
adapts to the current environment and helps the user to fit to his needs,
rather than forcing him to use a preset, fixed layout and trying to
shoehorn all windows and applications into it.
.P
.BR wmii
supports classic and tiled window management with extended keyboard and mouse
control.  The classic window management arranges windows in a floating layer,
whereas windows can be moved and resized freely.  The tiled window management 
is based on columns which split up the screen horizontally. Each column handles
arbitrary windows and arranges them vertically in a non-overlapping way,
whereas windows can be moved and resized between and within columns freely.
.P
.BR wmii
provides a virtual filesystem which represents the internal state pretty much
similiar to the procfs of Unix operating systems.  Modifying this virtual
filesystem results in changing the state of the window manager. The virtual
filesystem service can be accessed through 9P-capable client programs,
like
.BR wmiir (1) .
This allows simple and powerful remote control of the core window manager.
.P
.BR wmii
basically consists of clients, columns, views, and the bar, which are described
in detail in the next section.
.SS Options
.TP
.BI \-a " address"
Lets you specify the address which
.B wmiiwm
uses to listen for connections.  The syntax for
.I address
is taken (along with many other profound ideas) from the Plan 9 operating
system and has the form
.BR unix!/path/to/socket 
for unix socket files, and
.BR tcp!hostname!port
for tcp sockets.
.TP
.B \-c
Checks if another window manager is running. If not it exits with termination code
0.
.TP
.B \-v
Prints version information to stdout, then exits.
.SS Terminology
.TP 2
Display
A running X server instance consisting of input devices and screens.
.TP 2
Screen
A physical or virtual (Xinerama or 
.BR Xnest (1))
screen of an X display. A screen displays a bar window and a view at a time.
.TP 2
Window
A (rectangular) drawable X object which is displayed on a screen, usually an
application window.
.TP 2
Client
An application window surrounded with a frame window, which contains a border
and a title-bar. The title-bar consists of two labels, the tags of a client, and
the client's title.
.TP 2
Floating layer
A screen layer of
.BR wmii
on top of all other layers, where clients are arranged in a floating way.
They can be resized or moved freely.
.TP 2
Managed layer
A screen layer of
.BR wmii
behind the floating layer, where clients are arranged in a non-overlapping
(managed) way.  The window manager keeps track that they not overlap each others.
The managed layer consists of columns.
.TP 2
Tag
Alphanumeric strings which can be assigned to a client. This allows to address
single clients or groups of clients with a single tag, e.g.
.IR work ,
or several tags, e.g.
.IR work+mail .
Tags are separated with the
.I +
character.
.TP 2
View
A set of clients containing a specific tag, quite similiar to a workspace in
other window managers.  It consists of the floating and managed layers.
.TP 2
Column
A column is a screen area which arranges clients vertically in a
non-overlapping way. Columns provide three different modes, which arrange
clients with equal size, stacked, or maximized respectively. Clients can be
moved and resized between and within columns freely.
.TP 2
Bar
The bar at the bottom of the screen displays a label for each view and
allows to create arbitrary user-defined labels.
.SS Basic window management
Running a raw
.BR wmiiwm
process without the
.BR wmii (1)
script provides basic window management capabilities already. However it is
necessary to control the window manager remotely through its filesystem
interface, to use it effectively. By default it is only usable with the mouse
and you need to do
.BR wmiir (1)
calls to kill clients, if they don't provide a way to be closed nicely.
.SS File system
If you feel the need to change the default configuration, then customize (as
described above) the
.B wmiirc
action.  This action is executed at the end of the
.BR wmii (1)
script and does all the work of setting up the window manager, the key
bindings, the bar labels, etc.
.SH EXAMPLES
.TP
.SH FILES
.TP
/tmp/ns.$USER.$DISPLAY/wmii
The wmii socket file which provides a 9P service.
.TP
CONFPREFIX/wmii-3
Global action directory.
.TP
$HOME/.wmii-3
User-specific action directory.  Actions are first searched here.
.SH ENVIRONMENT
.TP
HOME, USER
See the section
.B FILES
above.
.P
The following variables are set and exported within
.BR wmii (1)
and thus can be used in actions.
.TP
PATH
.BR wmii (1)
added the local and global actions directory.
.TP
WMII_ADDRESS
Socket file of
.BR wmii (1).
Used by
.BR wmiir (1).
.SH SEE ALSO
.BR wmiiwm (1),
.BR wmiimenu (1),
.BR wmiir (1)
