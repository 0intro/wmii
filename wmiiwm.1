.TH WMIIWM 1 wmii-VERSION
.SH NAME
wmiiwm \(em window manager improved\(emimproved (core)
.SH SYNOPSIS
.B wmiiwm
.B \-a
.I <address>
.RB [ \-c ]
.RB [ \-v ]
.SH DESCRIPTION

.PD 0
.SS Overview
.BR wmiiwm (1)
is the core of window manager improved\(emimproved.
.P
.B wmii
is a dynamic window manager for X11. In contrast to static window management
the user rarely has to think about how to organize windows, no matter what he
is doing or how many applications are used at the same time. The window manager
adapts to the current environment and fits to the needs of the user, rather 
than forcing him to use a preset, fixed layout and trying to shoehorn all
windows and applications into it.
.P
.B wmii
supports classic and tiled window management with extended keyboard and mouse
control. The classic window management arranges windows in a floating layer
in which windows can be moved and resized freely. The tiled window management 
is based on columns which split up the screen horizontally. Each column handles
arbitrary windows and arranges them vertically in a non\-overlapping way. They
can then be moved and resized between and within columns at will.
.P
.B wmii
provides a virtual filesystem which represents the internal state similar to
the procfs of Unix operating systems. Modifying this virtual filesystem results
in changing the state of the window manager. The virtual filesystem service can
be accessed through 9P\-capable client programs, like
.BR wmiir (1) .
This allows simple and powerful remote control of the core window manager.
.P
.B wmii
basically consists of clients, columns, views, and the bar, which are described
in detail in the
.B Terminology
section.
.SS Options
.TP
.BI \-a " address"
Lets you specify the address which
.B wmiiwm
uses to listen for connections.  The syntax for
.I address
is taken (along with many other profound ideas) from the Plan 9 operating
system and has the form
.B unix!/path/to/socket 
for unix socket files, and
.B tcp!hostname!port
for tcp sockets.
.TP
.B \-c
Checks if another window manager is running. If not it exits with termination code
0.
.TP
.B \-v
Prints version information to stdout, then exits.
.SS Terminology
.TP 2
Display
A running X server instance consisting of input devices and screens.
.TP 2
Screen
A physical or virtual (Xinerama or 
.BR Xnest (1))
screen of an X display. A screen displays a bar window and a view at a time.
.TP 2
Window
A (rectangular) drawable X object which is displayed on a screen, usually an
application window.
.TP 2
Client
An application window surrounded by a frame window containing a border and a
title\-bar.
.TP 2
Floating layer
A screen layer of
.B wmii
on top of all other layers, where clients are arranged in a classic (floating)
way. They can be resized or moved freely.
.TP 2
Managed layer
A screen layer of
.B wmii
behind the floating layer, where clients are arranged in a non\-overlapping
(managed) way.  Here, the window manager dynamically assigns each client a
size and position. The managed layer consists of columns.
.TP 2
Tag
Alphanumeric strings which can be assigned to a client. This provides a
mechanism to group clients with similar properties. Clients can have one
tag, e.g.
.IR work ,
or several tags, e.g.
.IR work+mail .
Tags are separated with the
.I +
character.
.TP 2
View
A set of clients containing a specific tag, quite similiar to a workspace in
other window managers.  It consists of the floating and managed layers.
.TP 2
Column
A column is a screen area which arranges clients vertically in a
non\-overlapping way. Columns provide three different modes, which arrange
clients with equal size, stacked, or maximized respectively. Clients can be
moved and resized between and within columns freely.
.TP 2
Bar
The bar at the bottom of the screen displays a label for each view and
allows the creation of arbitrary user\-defined labels.
.TP 2
Event
An event is a message which can be read from a special file in the filesystem
of
.BR wmiiwm ,
such as a mouse button press, a key press, or a message written by a different
9P\-client.
.SS Basic window management
Running a raw
.B wmiiwm
process without the
.BR wmii (1)
script provides basic window management capabilities already. However to use
it effectively, remote control through its filesystem interface is necessary.
By default it is only usable with the mouse in conjunction with the
.I Mod1 (Alt)
modifier key. Other interactions like customizing the style, killing or
retagging clients, or grabbing keys cannot be achieved without accessing the
filesystem.
.P
The filesystem can be accessed by connecting to the
.I address
of
.B wmiiwm
with any 9P\-capable client, like
.BR wmiir (1).
.SH SEE ALSO
.BR wmii (1),
.BR dmenu (1),
.BR wmiir (1)
